{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport avatarStyle from '../../../styles/components/avatar.module.scss';\nimport buttonStyle from '../../../styles/components/buttons.module.scss';\nimport styles from './NewComment.module.scss';\nimport React, { useContext, useState } from 'react';\nimport context from '../../context';\nimport moment from 'moment';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\n\nvar NewComment = function NewComment(_ref) {\n  _s();\n\n  var setShowComment = _ref.setShowComment;\n  var contextValue = useContext(context);\n  var discussionList = contextValue.discussionList,\n      setDiscussionList = contextValue.setDiscussionList;\n\n  var _useState = useState(''),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  var commentSubmit = function commentSubmit(event) {\n    event.preventDefault();\n    var commentItem = {\n      record: {\n        name: 'Eric',\n        date: moment().format('l'),\n        content: comment,\n        goodCount: 0\n      }\n    };\n    setDiscussionList([commentItem].concat(_toConsumableArray(discussionList)));\n    setShowComment(false);\n  };\n\n  var changeComment = function changeComment(event) {\n    setComment(event.target.value);\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: commentSubmit\n  }, __jsx(\"div\", {\n    className: styles.addMessage\n  }, __jsx(\"div\", {\n    className: avatarStyle.avatarMl\n  }, \"E\"), __jsx(\"div\", {\n    className: styles.textAreaBox\n  }, __jsx(\"textarea\", {\n    placeholder: \"\\u65B0\\u589E\\u56DE\\u8986\",\n    onChange: changeComment\n  })), __jsx(\"button\", {\n    className: buttonStyle.iconButtonSm\n  }, __jsx(IconButton, null, __jsx(SendIcon, {\n    fontSize: \"small\"\n  })))));\n};\n\n_s(NewComment, \"p6uhxVbGd3hCv0V1C/8n5XyHPbw=\");\n\n_c = NewComment;\nexport default NewComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewComment\");","map":{"version":3,"sources":["/Users/ericwang/Documents/workspace/academyDemo/components/CommentList/NewComment/NewComment.js"],"names":["avatarStyle","buttonStyle","styles","React","useContext","useState","context","moment","SendIcon","IconButton","NewComment","setShowComment","contextValue","discussionList","setDiscussionList","comment","setComment","commentSubmit","event","preventDefault","commentItem","record","name","date","format","content","goodCount","changeComment","target","value","addMessage","avatarMl","textAreaBox","iconButtonSm"],"mappings":";;;;;AAAA,OAAOA,WAAP,MAAwB,+CAAxB;AACA,OAAOC,WAAP,MAAwB,gDAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAwB;AAAA;;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;AACzC,MAAMC,YAAY,GAAGR,UAAU,CAACE,OAAD,CAA/B;AADyC,MAEjCO,cAFiC,GAEKD,YAFL,CAEjCC,cAFiC;AAAA,MAEjBC,iBAFiB,GAEKF,YAFL,CAEjBE,iBAFiB;;AAAA,kBAGXT,QAAQ,CAAC,EAAD,CAHG;AAAA,MAGlCU,OAHkC;AAAA,MAGzBC,UAHyB;;AAIzC,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAMC,WAAW,GAAG;AAClBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,MADA;AAENC,QAAAA,IAAI,EAAEhB,MAAM,GAAGiB,MAAT,CAAgB,GAAhB,CAFA;AAGNC,QAAAA,OAAO,EAAEV,OAHH;AAINW,QAAAA,SAAS,EAAE;AAJL;AADU,KAApB;AAQAZ,IAAAA,iBAAiB,EAAEM,WAAF,4BAAkBP,cAAlB,GAAjB;AACAF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAZD;;AAaA,MAAMgB,aAAa,GAAG,SAAhBA,aAAgB,CAACT,KAAD,EAAW;AAC/BF,IAAAA,UAAU,CAACE,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAGA,SACE;AAAM,IAAA,QAAQ,EAAEZ;AAAhB,KACE;AAAK,IAAA,SAAS,EAAEf,MAAM,CAAC4B;AAAvB,KACE;AAAK,IAAA,SAAS,EAAE9B,WAAW,CAAC+B;AAA5B,SADF,EAEE;AAAK,IAAA,SAAS,EAAE7B,MAAM,CAAC8B;AAAvB,KACE;AAAU,IAAA,WAAW,EAAC,0BAAtB;AAA6B,IAAA,QAAQ,EAAEL;AAAvC,IADF,CAFF,EAKE;AAAQ,IAAA,SAAS,EAAE1B,WAAW,CAACgC;AAA/B,KACE,MAAC,UAAD,QACE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAC;AAAnB,IADF,CADF,CALF,CADF,CADF;AAeD,CAnCD;;GAAMvB,U;;KAAAA,U;AAqCN,eAAeA,UAAf","sourcesContent":["import avatarStyle from '../../../styles/components/avatar.module.scss';\nimport buttonStyle from '../../../styles/components/buttons.module.scss';\nimport styles from './NewComment.module.scss';\nimport React, { useContext, useState } from 'react';\nimport context from '../../context';\nimport moment from 'moment';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\n\nconst NewComment = ({ setShowComment }) => {\n  const contextValue = useContext(context);\n  const { discussionList, setDiscussionList } = contextValue;\n  const [comment, setComment] = useState('');\n  const commentSubmit = (event) => {\n    event.preventDefault();\n    const commentItem = {\n      record: {\n        name: 'Eric',\n        date: moment().format('l'),\n        content: comment,\n        goodCount: 0,\n      },\n    };\n    setDiscussionList([commentItem, ...discussionList]);\n    setShowComment(false);\n  };\n  const changeComment = (event) => {\n    setComment(event.target.value);\n  };\n  return (\n    <form onSubmit={commentSubmit}>\n      <div className={styles.addMessage}>\n        <div className={avatarStyle.avatarMl}>E</div>\n        <div className={styles.textAreaBox}>\n          <textarea placeholder=\"新增回覆\" onChange={changeComment} />\n        </div>\n        <button className={buttonStyle.iconButtonSm}>\n          <IconButton>\n            <SendIcon fontSize=\"small\" />\n          </IconButton>\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewComment;\n"]},"metadata":{},"sourceType":"module"}